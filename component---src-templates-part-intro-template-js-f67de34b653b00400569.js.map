{"version":3,"sources":["webpack:///./node_modules/lodash/isEmpty.js","webpack:///./src/templates/PartIntroTemplate.js","webpack:///./node_modules/lodash/fp/isEmpty.js"],"names":["baseKeys","getTag","isArguments","isArray","isArrayLike","isBuffer","isPrototype","isTypedArray","hasOwnProperty","Object","prototype","module","exports","value","splice","length","tag","size","key","call","PartIntroTemplate","_ref","markdownRemark","data","frontmatter","html","mainImage","part","lang","titles","isEmpty","navigation","keys","parserOptions","replace","_ref2","type","attribs","children","class","React","createElement","className","domToReact","Layout","SEO","title","description","mainSEOdescription","keywords","concat","_toConsumableArray","mainSEOtags","values","Banner","style","backgroundImage","path","resolve","publicURL","backgroundColor","colors","partColors","Element","Arrow","content","text","link","Parser","wrapperClassName","stack","map","n","letter","getPartTranslationPath","snakeCase","PrevNext","func","convert","placeholder"],"mappings":"iFAAA,IAAIA,EAAW,EAAQ,QACnBC,EAAS,EAAQ,QACjBC,EAAc,EAAQ,QACtBC,EAAU,EAAQ,QAClBC,EAAc,EAAQ,QACtBC,EAAW,EAAQ,QACnBC,EAAc,EAAQ,QACtBC,EAAe,EAAQ,QAUvBC,EAHcC,OAAOC,UAGQF,eA2DjCG,EAAOC,QAxBP,SAAiBC,GACf,GAAa,MAATA,EACF,OAAO,EAET,GAAIT,EAAYS,KACXV,EAAQU,IAA0B,iBAATA,GAA4C,mBAAhBA,EAAMC,QAC1DT,EAASQ,IAAUN,EAAaM,IAAUX,EAAYW,IAC1D,OAAQA,EAAME,OAEhB,IAAIC,EAAMf,EAAOY,GACjB,GApDW,gBAoDPG,GAnDO,gBAmDUA,EACnB,OAAQH,EAAMI,KAEhB,GAAIX,EAAYO,GACd,OAAQb,EAASa,GAAOE,OAE1B,IAAK,IAAIG,KAAOL,EACd,GAAIL,EAAeW,KAAKN,EAAOK,GAC7B,OAAO,EAGX,OAAO,I,sZCnDM,SAASE,EAAiBC,GAAY,IAC3CC,EADsCD,EAAJE,KAClCD,eACAE,EAAsBF,EAAtBE,YAAaC,EAASH,EAATG,KACbC,EAA0BF,EAA1BE,UAAWC,EAAeH,EAAfG,KAAMC,EAASJ,EAATI,KAEnBC,EAAUC,IAAQC,IAAWH,GAAMD,IAErC,GADAlB,OAAOuB,KAAKD,IAAWH,GAAMD,IAG3BM,EAAgB,CACpBC,QAAS,SAAAC,GAAkC,IAA/BC,EAAID,EAAJC,KAAMC,EAAOF,EAAPE,QAASC,EAAQH,EAARG,SACzB,GAAa,QAATF,GAAoC,UAAlBC,EAAQE,MAC5B,OACEC,IAAAC,cAAA,OAAKC,UAAU,SAASC,IAAWL,EAAUL,MAOrD,OACEO,IAAAC,cAACG,IAAM,KACLJ,IAAAC,cAACI,IAAG,CACFjB,KAAMA,EACNkB,MAAK,cAAwB,OAATlB,EAAgB,MAAQ,QAASD,EACrDoB,YAAaC,IAAmBpB,GAChCqB,SAAQ,GAAAC,OAAAC,YACHC,KAAW,CACdrB,IAAWH,GAAMD,GAAQlB,OAAO4C,OAAOtB,IAAWH,GAAMD,IAAS,OAIrEa,IAAAC,cAAA,OAAKC,UAAU,kBACbF,IAAAC,cAACa,IAAM,CACLZ,UAAU,4CACVa,MAAO,CACLC,gBAAgB,OAAQC,IAAKC,QAAQhC,EAAUiC,WAAU,IACzDC,gBAAiBC,EAAOC,IAAWnC,MAGrCa,IAAAC,cAACsB,IAAO,CAACrB,UAAU,aACjBF,IAAAC,cAACuB,IAAK,CACJtB,UAAU,aACVuB,QAAS,CACP,CACEL,gBAAiBC,EAAOC,IAAWnC,IACnCuC,KAAM,YACNC,KAAK,KAAc,OAATvC,EAAgB,GAAQA,EAAI,KAAG,oBAE3C,CACEgC,gBAAiBC,EAAc,MAC/BK,MAAkB,OAATtC,EAAgB,MAAQ,QAAM,IAAID,MAKjDa,IAAAC,cAAA,OAAKC,UAAU,wDACZ0B,IAAO3C,EAAMQ,IAGfJ,GACCW,IAAAC,cAACuB,IAAK,CACJK,iBAAiB,yBACjBC,OAAK,EACLL,QAASpC,EAAO0C,KAAI,SAAAC,GAClB,MAAO,CACLZ,gBAAiBC,EAAc,MAC/BY,OAAQD,EACRf,KAAMiB,YACJ9C,EACAD,EAAK,IACDgD,IAAU5C,IAAWH,GAAMD,GAAM6C,KAEvCN,KAASM,EAAC,IAAIzC,IAAWH,GAAMD,GAAM6C,WAQjDhC,IAAAC,cAACmC,IAAQ,CAACjD,KAAMA,EAAMC,KAAMA,Q,qBCvGpC,IACIiD,EADU,EAAQ,OACXC,CAAQ,UAAW,EAAQ,QAAe,EAAQ,SAE7DD,EAAKE,YAAc,EAAQ,QAC3BpE,EAAOC,QAAUiE,G","file":"component---src-templates-part-intro-template-js-f67de34b653b00400569.js","sourcesContent":["var baseKeys = require('./_baseKeys'),\n    getTag = require('./_getTag'),\n    isArguments = require('./isArguments'),\n    isArray = require('./isArray'),\n    isArrayLike = require('./isArrayLike'),\n    isBuffer = require('./isBuffer'),\n    isPrototype = require('./_isPrototype'),\n    isTypedArray = require('./isTypedArray');\n\n/** `Object#toString` result references. */\nvar mapTag = '[object Map]',\n    setTag = '[object Set]';\n\n/** Used for built-in method references. */\nvar objectProto = Object.prototype;\n\n/** Used to check objects for own properties. */\nvar hasOwnProperty = objectProto.hasOwnProperty;\n\n/**\n * Checks if `value` is an empty object, collection, map, or set.\n *\n * Objects are considered empty if they have no own enumerable string keyed\n * properties.\n *\n * Array-like values such as `arguments` objects, arrays, buffers, strings, or\n * jQuery-like collections are considered empty if they have a `length` of `0`.\n * Similarly, maps and sets are considered empty if they have a `size` of `0`.\n *\n * @static\n * @memberOf _\n * @since 0.1.0\n * @category Lang\n * @param {*} value The value to check.\n * @returns {boolean} Returns `true` if `value` is empty, else `false`.\n * @example\n *\n * _.isEmpty(null);\n * // => true\n *\n * _.isEmpty(true);\n * // => true\n *\n * _.isEmpty(1);\n * // => true\n *\n * _.isEmpty([1, 2, 3]);\n * // => false\n *\n * _.isEmpty({ 'a': 1 });\n * // => false\n */\nfunction isEmpty(value) {\n  if (value == null) {\n    return true;\n  }\n  if (isArrayLike(value) &&\n      (isArray(value) || typeof value == 'string' || typeof value.splice == 'function' ||\n        isBuffer(value) || isTypedArray(value) || isArguments(value))) {\n    return !value.length;\n  }\n  var tag = getTag(value);\n  if (tag == mapTag || tag == setTag) {\n    return !value.size;\n  }\n  if (isPrototype(value)) {\n    return !baseKeys(value).length;\n  }\n  for (var key in value) {\n    if (hasOwnProperty.call(value, key)) {\n      return false;\n    }\n  }\n  return true;\n}\n\nmodule.exports = isEmpty;\n","import './PartIntroTemplate.scss';\n\nimport Arrow from '../components/Arrow/Arrow';\nimport { Banner } from '../components/Banner/Banner';\nimport Element from '../components/Element/Element';\nimport Layout from '../components/layout';\nimport Parser from 'html-react-parser';\nimport PrevNext from '../components/PrevNext/PrevNext';\nimport React from 'react';\nimport SEO from '../components/seo';\nimport colors from '../colors';\nimport domToReact from 'html-react-parser/lib/dom-to-react';\nimport { graphql } from 'gatsby';\nimport isEmpty from 'lodash/fp/isEmpty';\nimport mainSEOdescription from '../content/seo/mainSEOdescription';\nimport mainSEOtags from '../content/seo/mainSEOtags';\nimport navigation from '../content/partnavigation/partnavigation';\nimport { partColors } from './partColors';\nimport path from 'path';\nimport snakeCase from 'lodash/fp/snakeCase';\nimport getPartTranslationPath from '../utils/getPartTranslationPath';\n\nexport default function PartIntroTemplate({ data }) {\n  const { markdownRemark } = data;\n  const { frontmatter, html } = markdownRemark;\n  const { mainImage, part, lang } = frontmatter;\n\n  const titles = !isEmpty(navigation[lang][part])\n    ? Object.keys(navigation[lang][part])\n    : [];\n\n  const parserOptions = {\n    replace: ({ type, attribs, children }) => {\n      if (type === 'tag' && attribs.class === 'intro') {\n        return (\n          <div className=\"col-7\">{domToReact(children, parserOptions)}</div>\n        );\n      }\n      return;\n    },\n  };\n\n  return (\n    <Layout>\n      <SEO\n        lang={lang}\n        title={`Fullstack ${lang === 'fi' ? 'osa' : 'part'}${part}`}\n        description={mainSEOdescription[lang]}\n        keywords={[\n          ...mainSEOtags,\n          navigation[lang][part] ? Object.values(navigation[lang][part]) : [],\n        ]}\n      />\n\n      <div className=\"spacing--after\">\n        <Banner\n          className=\"part-intro__banner spacing--mobile--small\"\n          style={{\n            backgroundImage: `url(${path.resolve(mainImage.publicURL)})`,\n            backgroundColor: colors[partColors[part]],\n          }}\n        >\n          <Element className=\"container\">\n            <Arrow\n              className=\"breadcrumb\"\n              content={[\n                {\n                  backgroundColor: colors[partColors[part]],\n                  text: 'Fullstack',\n                  link: `/${lang === 'fi' ? '' : `${lang}/`}#course-contents`,\n                },\n                {\n                  backgroundColor: colors['black'],\n                  text: `${lang === 'fi' ? 'Osa' : 'Part'} ${part}`,\n                },\n              ]}\n            />\n\n            <div className=\"part-intro col-7 col-10--mobile spacing--after-small\">\n              {Parser(html, parserOptions)}\n            </div>\n\n            {titles && (\n              <Arrow\n                wrapperClassName=\"spacing--mobile--large\"\n                stack\n                content={titles.map(n => {\n                  return {\n                    backgroundColor: colors['white'],\n                    letter: n,\n                    path: getPartTranslationPath(\n                      lang,\n                      part,\n                      `/${snakeCase(navigation[lang][part][n])}`\n                    ),\n                    text: `${n} ${navigation[lang][part][n]}`,\n                  };\n                })}\n              />\n            )}\n          </Element>\n        </Banner>\n\n        <PrevNext part={part} lang={lang} />\n      </div>\n    </Layout>\n  );\n}\n\nexport const partInfoQuery = graphql`\n  query($part: Int!, $lang: String!) {\n    markdownRemark(\n      frontmatter: {\n        part: { eq: $part }\n        letter: { eq: null }\n        lang: { eq: $lang }\n      }\n    ) {\n      html\n      frontmatter {\n        mainImage {\n          publicURL\n        }\n        part\n        lang\n      }\n    }\n  }\n`;\n","var convert = require('./convert'),\n    func = convert('isEmpty', require('../isEmpty'), require('./_falseOptions'));\n\nfunc.placeholder = require('./placeholder');\nmodule.exports = func;\n"],"sourceRoot":""}